{"version":3,"sources":["scripts/main.js"],"names":["unsortedList","document","querySelectorAll","convertSalary","string","Number","replace","split","join","getEmployees","list","map","item","name","innerText","position","dataset","salary","age","sortList","sorted","sort","person1","person2","i","length","toLocaleString"],"mappings":";AAAA,aAgCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9BA,IAAMA,EAAeC,SAASC,iBAAiB,MAE/C,SAASC,EAAcC,GACdC,OAAAA,OAAOD,EAAOE,QAAQ,MAAO,IAAIC,MAAM,KAAKC,KAAK,KAG1D,SAASC,EAAaC,GACb,OAAA,EAAIA,GAAMC,IAAI,SAAAC,GACZ,MAAA,CACLC,KAAMD,EAAKE,UACXC,SAAUH,EAAKI,QAAQD,SACvBE,OAAQd,EAAcS,EAAKI,QAAQC,QACnCC,IAAKN,EAAKI,QAAQE,OAMxB,SAASC,EAAST,GAIX,IAHCU,IAAAA,EAASX,EAAaC,GACzBW,KAAK,SAACC,EAASC,GAAYA,OAAAA,EAAQN,OAASK,EAAQL,SAE9CO,EAAI,EAAGA,EAAIJ,EAAOK,OAAQD,IACjCd,EAAKc,GAAGV,UAAYM,EAAOI,GAAGX,KAC9BH,EAAKc,GAAGR,QAAQD,SAAWK,EAAOI,GAAGT,SACrCL,EAAKc,GAAGR,QAAQC,OAAcG,IAAAA,OAAAA,EAAOI,GAAGP,OAAQS,kBAChDhB,EAAKc,GAAGR,QAAQE,IAAME,EAAOI,GAAGN,IAIpCC,EAASnB","file":"main.437ad2ed.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst unsortedList = document.querySelectorAll('li');\n\nfunction convertSalary(string) {\n  return Number(string.replace(/\\$/g, '').split(',').join(''));\n}\n\nfunction getEmployees(list) {\n  return [...list].map(item => {\n    return {\n      name: item.innerText,\n      position: item.dataset.position,\n      salary: convertSalary(item.dataset.salary),\n      age: item.dataset.age,\n    };\n  }\n  );\n}\n\nfunction sortList(list) {\n  const sorted = getEmployees(list)\n    .sort((person1, person2) => person2.salary - person1.salary);\n\n  for (let i = 0; i < sorted.length; i++) {\n    list[i].innerText = sorted[i].name;\n    list[i].dataset.position = sorted[i].position;\n    list[i].dataset.salary = `$${(sorted[i].salary).toLocaleString()}`;\n    list[i].dataset.age = sorted[i].age;\n  }\n}\n\nsortList(unsortedList);\n"]}